@page "/symptomTracker"
@rendermode InteractiveServer
@using MediPal.Models
@* @using MediPal.Data *@
@using Microsoft.EntityFrameworkCore


<PageTitle>Symptom Tracker</PageTitle>
<h3>Symptom Tracker</h3> 

<MediPal.Components.Pages.SymptomPages.Index />

@* <MudButton OnClick="@AddSymptom" Color="@Color.Success" Class="add-item-btn">Add Symptom</MudButton>
<MudButton OnClick="@DeleteSymptom" Color="@Color.Error" Class="remove-item-btn">Remove Symptom</MudButton> *@

@* <MudDataGrid T="Symptom" Items="@Symptom" EditMode="DataGridEditMode.Form" Bordered="true" Dense="true" EditTrigger="@DataGridEditTrigger.Manual">

    <Columns>
        <PropertyColumn Property="Symptom => Symptom.SymptomID" />
        <PropertyColumn Property="Symptom => Symptom.SymptomName" />
        <PropertyColumn Property="Symptom => Symptom.Date" />
        <PropertyColumn Property="Symptom => Symptom.PainLevel" Title="Pain Level" />
        <PropertyColumn Property="Symptom => Symptom.Activity" />

        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>

</MudDataGrid> *@


@code {

    //Attempt at getting list to populate in dashboard with only symptomname and date
    // private IEnumerable<Symptom> Symptom;


    // public List<Symptom> Symptom;

    // private IList<Symptom> Symptom = new List<Symptom>();
    // private bool _isCellEditMode;
    // private List<string> _events = new();
    // private bool _editTriggerRowClick;
    // private Symptom symptom = new Symptom();


    // protected override void OnInitialized()
    // {
    //     Symptom = new List<Symptom>();
    //     Symptom.Add(new Symptom { SymptomID = 1, SymptomName = "Cough", Date = DateOnly.FromDateTime(DateTime.Now), PainLevel = 3, Activity = "Work" });
    //     Symptom.Add(new Symptom { SymptomID = 2, SymptomName = "Headache", Date = DateOnly.FromDateTime(DateTime.Now), PainLevel = 5, Activity = "Sleeping" });
    //     Symptom.Add(new Symptom { SymptomID = 3, SymptomName = "Chills", Date = DateOnly.FromDateTime(DateTime.Now), PainLevel = 5, Activity = "Work" });
    //     Symptom.Add(new Symptom { SymptomID = 4, SymptomName = "Running nose", Date = DateOnly.FromDateTime(DateTime.Now), PainLevel = 5, Activity = "Working out" });
    //     Symptom.Add(new Symptom { SymptomID = 5, SymptomName = "Body aches", Date = DateOnly.FromDateTime(DateTime.Now), PainLevel = 5, Activity = "Work" });
    //     Symptom.Add(new Symptom { SymptomID = 6, SymptomName = "Headache", Date = DateOnly.FromDateTime(DateTime.Now), PainLevel = 5, Activity = "Reading" });

    // }


    // void AddSymptom()
    // {
    //     Symptom.Add(new Symptom { SymptomID = Symptom.Count +1 , SymptomName = "AddedSymptom", Date = DateOnly.FromDateTime(DateTime.Now), PainLevel = 3, Activity = "Work" });
    // }

    // void DeleteSymptom()
    // {
    //     var symptomToBeDeleted =;
    // }

    // void EditSymptom(int id)
    // {
    //     symptom = Symptom.FirstOrDefault(Symptom => Symptom.SymptomID == id);
    // }

}
