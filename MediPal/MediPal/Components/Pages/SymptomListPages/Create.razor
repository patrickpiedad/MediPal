@page "/symptomlists/create"

@using Microsoft.EntityFrameworkCore
@using MediPal.Models
@inject IDbContextFactory<MediPal.Data.MediPalContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

@* <h1>Create</h1> *@

@* <h4>SymptomList</h4> *@
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="SymptomList" OnValidSubmit="AddSymptomList" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="symptom" class="form-label">Symptom:</label> 
                <InputText id="symptom" @bind-Value="SymptomList.Symptom" class="form-control" /> 
                <ValidationMessage For="() => SymptomList.Symptom" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="date" class="form-label">Date:</label> 
                <InputDate id="date" @bind-Value="SymptomList.Date" class="form-control" /> 
                <ValidationMessage For="() => SymptomList.Date" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="painlevel" class="form-label">Pain Level:</label> 
                <InputNumber id="painlevel" @bind-Value="SymptomList.PainLevel" class="form-control" /> 
                <ValidationMessage For="() => SymptomList.PainLevel" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="activity" class="form-label">Activity:</label> 
                <InputText id="activity" @bind-Value="SymptomList.Activity" class="form-control" /> 
                <ValidationMessage For="() => SymptomList.Activity" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/symptomlists">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public SymptomList SymptomList { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddSymptomList()
    {
        using var context = DbFactory.CreateDbContext();
        context.SymptomList.Add(SymptomList);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/symptomlists");
    }
}
