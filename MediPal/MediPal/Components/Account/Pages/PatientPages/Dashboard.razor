@page "/"

@using MediPal.Components
@using MediPal.Models
@using Microsoft.AspNetCore.Authorization
@using MediPal.Components.Services
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity


@inject ISymptomService SymptomService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager

@rendermode @(new InteractiveServerRenderMode(prerender: false))

@attribute [Authorize(Roles = "Admin, Patient, Doctor")]

<AuthorizeView>
    <PageTitle>Dashboard</PageTitle>

    <div class="container-fluid">

        @* start row 1 *@
        <div class="row">

            @*Patient Information*@
            <div class="col-lg-4">
                <div class="card border">
                    <div class="card-body" style="text-align: center;">
                        @* need to detach this into a separate component and link to it here *@
                        <h5 class="card-title">Patient Information</h5>
                        @if (currentUser != null)
                        {
                            <p class="card-text">Name: @currentUser.FirstName @currentUser.LastName</p>
                            <p class="card-text">Date of Birth: @currentUser.DateOfBirth</p>
                            @* <p class="card-text">Medical Diagnosis: Leukemia</p> *@
                        }
                        else
                        {
                            <p class="card-text">Loading...</p>
                        }
                        @* <a href="#" class="btn btn-primary">View Details</a> *@
                    </div>
                </div>
            </div>

            @*Treatment Timeline*@
            <div class="col-lg-4">
                <div class="card border">
                    <div class="card-body" style=" text-align: center;">
                        @* need to detach this into a separate component and link to it here *@
                        <h5 class="card-title">Treatment Timeline</h5>
                        <p class="card-text"></p>
                        <a href="/timeline" class="btn btn-primary">View Details</a>
                    </div>
                </div>
            </div>

            @*My Profile*@
            <div class="col-lg-4">
                <div class="card border">
                    <div class="card-body" style=" text-align: center;">
                        @* need to detach this into a separate component and link to it here *@
                        <h5 class="card-title">My Profile</h5>
                        @if (currentUser != null)
                        {
                            <p class="card-text">@currentUser.FirstName @currentUser.LastName</p>
                        }
                        <a href="Account/Manage" class="btn btn-primary">Settings</a>
                    </div>
                </div>
            </div>
        </div>

        @*
        <NavLink class="nav-link" href="Account/Manage">
        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
        </NavLink> *@

        <br />
        <br />

        @* start row 2 *@
        <div class="row">

            @*Symptom Tracker*@
            <div class="col-lg-4">
                <div class="card border">
                    <div class="card-body" style=" text-align: center;">
                        <h5>Symptom Tracker</h5>
                        <table class="table table-striped">

                            @if (symptoms == null || symptoms.Any() == false)
                            {
                                <div>
                                    <span>No symptoms found.</span>
                                </div>
                            }

                            else
                            {
                                <thead>
                                    <tr>
                                        <th>Symptom Name</th>
                                        <th>Date</th>
                                    </tr>
                                </thead>
                            }
                            <tbody>
                                @foreach (var symptom in symptoms)
                                {
                                    <tr>
                                        <td>@symptom.SymptomName</td>
                                        <td>@symptom.Date</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            @*Week Outlook*@
            <div class="col-lg-4">
                <div class="card border">
                    <div class="card-body" style=" text-align: left;">
                        @* need to detach this into a separate component and link to it here *@
                        <h5 class="card-title" style="text-align: center;">Week Outlook</h5>
                        <div style="padding: 3% 10%;">
                            <p class="card-text">Monday: Chemotherapy</p>
                            <p class="card-text">Tuesday: Recovery</p>
                            <p class="card-text">Wednesday: Recovery</p>
                            <p class="card-text">Thursday: Recovery</p>
                            <p class="card-text">Friday: Bone marrow puncture & release</p>
                            <p class="card-text">Saturday: Break</p>
                            <p class="card-text">Sunday: Break</p>
                            <div style="text-align: center;">
                                <a href="weekoutlook" class="btn btn-primary">View Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Your Medical Team*@
            <div class="col-lg-4">
                <div class="card border">
                    <div class="card-body" style="text-align: left;">
                        @* need to detach this into a separate component and link to it here *@
                        <h5 class="card-title" style="text-align: center">Your Medical Team</h5>

                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>First Name</th>
                                    <th>Last Name</th>
                                    <th>Role</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var doctor in doctors)
                                {
                                    <tr>
                                        <td>@doctor.Title</td>
                                        <td>@doctor.FirstName</td>
                                        <td>@doctor.LastName</td>
                                        <td>@doctor.Role</td>
                                    </tr>
                                }
                            </tbody>

                        </table>

                        <div style="text-align: center;">
                            <a href="#" class="btn btn-primary">View Details</a>
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </div>

</AuthorizeView>


@code {
    List<Symptom> symptoms = new List<Symptom>();
    List<Doctor> doctors = new List<Doctor>();

    private ClaimsPrincipal? user;
    private ApplicationUser? currentUser;


    protected override async Task OnInitializedAsync()
    {
        //get current user
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;



        // get all symptoms from database, using symptomservice interface SPECIFIC to the user logged in
        if (user.Identity.IsAuthenticated)
        {
            var userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            symptoms = await SymptomService.GetSymptomsByUserIdAsync(userId);

            // Get current user details
            currentUser = await UserManager.FindByIdAsync(userId);
        }

        else
        {
            symptoms = new List<Symptom>();
        }

        // Need to add doctors in OnInitializedAsync to have them load on program load, this is not connected to the database, need to add later
        doctors.Add(new Doctor("Kathy", "Awesome", DateOnly.Parse("October 21, 1985"), "M.D.", "Chief Medical Officer"));
        doctors.Add(new Doctor("Richard", "Cool", DateOnly.Parse("May 4, 1989"), "M.D.", "Lead Doctor"));
        doctors.Add(new Doctor("Arnie", "Neat", DateOnly.Parse("October 21, 1993"), "M.D.", "Assistant Doctor"));
    }
}
