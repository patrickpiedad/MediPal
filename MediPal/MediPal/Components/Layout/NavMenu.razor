@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MediPal</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        @if (isPatient)
        {

            @* Dashboard *@
            <AuthorizeView Roles="Admin, Patient, Doctor">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> My Dashboard
                    </NavLink>
                </div>
            </AuthorizeView>

            @* Calendar *@
            <AuthorizeView Roles="Admin, Patient, Doctor">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="calendar">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> My Calendar
                    </NavLink>
                </div>
            </AuthorizeView>

            @* Symptom List *@
            <AuthorizeView Roles="Admin, Patient, Doctor">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="symptomlist">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> My Symptoms
                    </NavLink>
                </div>
            </AuthorizeView>

            @* Note List *@
            <AuthorizeView Roles="Admin, Patient, Doctor">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="notelist">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> My Notes
                    </NavLink>
                </div>
            </AuthorizeView>
        }
        <hr />

        @if (isDoctor)
        {
            <AuthorizeView Roles="Doctor">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/doctordashboard" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Doctor's Dashboard
                    </NavLink>
                </div>
            </AuthorizeView>
        }

        @* MediPal Description *@
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="description">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> What is MediPal?
            </NavLink>
        </div>

        <hr />

        @* Authentication Required *@
        @*         <div class="nav-item px-3">
        <NavLink class="nav-link" href="auth">
        <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
        </NavLink>
        </div> *@

        @* Account Management *@
        <AuthorizeView>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Account/Manage">
                    <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Profile
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="nav-link">
                        <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                    </button>
                </form>
            </div>

            <hr />

        </AuthorizeView>



        @* Login *@
        <AuthorizeView>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@NavigationManager.ToAbsoluteUri("Account/Login")">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
                <hr />
            </NotAuthorized>
        </AuthorizeView>

        @* Register *@
        <AuthorizeView>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@NavigationManager.ToAbsoluteUri("Account/Register")">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

    </nav>
</div>

@code {
    private string? currentUrl;
    private ClaimsPrincipal user;
    private bool isDoctor;
    private bool isAdmin;
    private bool isPatient;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        isDoctor = user.IsInRole("Doctor");
        isAdmin = user.IsInRole("Admin");
        isPatient = user.IsInRole("Patient");

        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;


    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

